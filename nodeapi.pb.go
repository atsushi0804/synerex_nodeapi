// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nodeapi.proto

package synerex_nodeapi

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type NodeType int32

const (
	NodeType_PROVIDER NodeType = 0
	NodeType_SERVER   NodeType = 1
	NodeType_GATEWAY  NodeType = 2
)

var NodeType_name = map[int32]string{
	0: "PROVIDER",
	1: "SERVER",
	2: "GATEWAY",
}

var NodeType_value = map[string]int32{
	"PROVIDER": 0,
	"SERVER":   1,
	"GATEWAY":  2,
}

func (x NodeType) String() string {
	return proto.EnumName(NodeType_name, int32(x))
}

func (NodeType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad9a996d16f0fd5c, []int{0}
}

type KeepAliveCommand int32

const (
	KeepAliveCommand_NONE          KeepAliveCommand = 0
	KeepAliveCommand_RECONNECT     KeepAliveCommand = 1
	KeepAliveCommand_SERVER_CHANGE KeepAliveCommand = 2
)

var KeepAliveCommand_name = map[int32]string{
	0: "NONE",
	1: "RECONNECT",
	2: "SERVER_CHANGE",
}

var KeepAliveCommand_value = map[string]int32{
	"NONE":          0,
	"RECONNECT":     1,
	"SERVER_CHANGE": 2,
}

func (x KeepAliveCommand) String() string {
	return proto.EnumName(KeepAliveCommand_name, int32(x))
}

func (KeepAliveCommand) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad9a996d16f0fd5c, []int{1}
}

// information for synerex servers and providers, gateways (nodes)
type NodeInfo struct {
	NodeName             string   `protobuf:"bytes,1,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	NodeType             NodeType `protobuf:"varint,2,opt,name=node_type,json=nodeType,proto3,enum=nodeapi.NodeType" json:"node_type,omitempty"`
	ServerInfo           string   `protobuf:"bytes,3,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
	NodePbaseVersion     string   `protobuf:"bytes,4,opt,name=node_pbase_version,json=nodePbaseVersion,proto3" json:"node_pbase_version,omitempty"`
	WithNodeId           int32    `protobuf:"varint,5,opt,name=with_node_id,json=withNodeId,proto3" json:"with_node_id,omitempty"`
	ClusterId            int32    `protobuf:"varint,6,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	AreaId               string   `protobuf:"bytes,7,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	ChannelTypes         []uint32 `protobuf:"varint,8,rep,packed,name=channelTypes,proto3" json:"channelTypes,omitempty"`
	GwInfo               string   `protobuf:"bytes,9,opt,name=gw_info,json=gwInfo,proto3" json:"gw_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeInfo) Reset()         { *m = NodeInfo{} }
func (m *NodeInfo) String() string { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()    {}
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad9a996d16f0fd5c, []int{0}
}

func (m *NodeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfo.Unmarshal(m, b)
}
func (m *NodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfo.Marshal(b, m, deterministic)
}
func (m *NodeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfo.Merge(m, src)
}
func (m *NodeInfo) XXX_Size() int {
	return xxx_messageInfo_NodeInfo.Size(m)
}
func (m *NodeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfo proto.InternalMessageInfo

func (m *NodeInfo) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *NodeInfo) GetNodeType() NodeType {
	if m != nil {
		return m.NodeType
	}
	return NodeType_PROVIDER
}

func (m *NodeInfo) GetServerInfo() string {
	if m != nil {
		return m.ServerInfo
	}
	return ""
}

func (m *NodeInfo) GetNodePbaseVersion() string {
	if m != nil {
		return m.NodePbaseVersion
	}
	return ""
}

func (m *NodeInfo) GetWithNodeId() int32 {
	if m != nil {
		return m.WithNodeId
	}
	return 0
}

func (m *NodeInfo) GetClusterId() int32 {
	if m != nil {
		return m.ClusterId
	}
	return 0
}

func (m *NodeInfo) GetAreaId() string {
	if m != nil {
		return m.AreaId
	}
	return ""
}

func (m *NodeInfo) GetChannelTypes() []uint32 {
	if m != nil {
		return m.ChannelTypes
	}
	return nil
}

func (m *NodeInfo) GetGwInfo() string {
	if m != nil {
		return m.GwInfo
	}
	return ""
}

type NodeID struct {
	NodeId               int32    `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Secret               uint64   `protobuf:"fixed64,2,opt,name=secret,proto3" json:"secret,omitempty"`
	ServerInfo           string   `protobuf:"bytes,3,opt,name=server_info,json=serverInfo,proto3" json:"server_info,omitempty"`
	KeepaliveDuration    int32    `protobuf:"varint,4,opt,name=keepalive_duration,json=keepaliveDuration,proto3" json:"keepalive_duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeID) Reset()         { *m = NodeID{} }
func (m *NodeID) String() string { return proto.CompactTextString(m) }
func (*NodeID) ProtoMessage()    {}
func (*NodeID) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad9a996d16f0fd5c, []int{1}
}

func (m *NodeID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeID.Unmarshal(m, b)
}
func (m *NodeID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeID.Marshal(b, m, deterministic)
}
func (m *NodeID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeID.Merge(m, src)
}
func (m *NodeID) XXX_Size() int {
	return xxx_messageInfo_NodeID.Size(m)
}
func (m *NodeID) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeID.DiscardUnknown(m)
}

var xxx_messageInfo_NodeID proto.InternalMessageInfo

func (m *NodeID) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *NodeID) GetSecret() uint64 {
	if m != nil {
		return m.Secret
	}
	return 0
}

func (m *NodeID) GetServerInfo() string {
	if m != nil {
		return m.ServerInfo
	}
	return ""
}

func (m *NodeID) GetKeepaliveDuration() int32 {
	if m != nil {
		return m.KeepaliveDuration
	}
	return 0
}

type ServerStatus struct {
	Cpu                  float64  `protobuf:"fixed64,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory               float64  `protobuf:"fixed64,2,opt,name=memory,proto3" json:"memory,omitempty"`
	MsgCount             uint64   `protobuf:"varint,3,opt,name=msg_count,json=msgCount,proto3" json:"msg_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerStatus) Reset()         { *m = ServerStatus{} }
func (m *ServerStatus) String() string { return proto.CompactTextString(m) }
func (*ServerStatus) ProtoMessage()    {}
func (*ServerStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad9a996d16f0fd5c, []int{2}
}

func (m *ServerStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerStatus.Unmarshal(m, b)
}
func (m *ServerStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerStatus.Marshal(b, m, deterministic)
}
func (m *ServerStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerStatus.Merge(m, src)
}
func (m *ServerStatus) XXX_Size() int {
	return xxx_messageInfo_ServerStatus.Size(m)
}
func (m *ServerStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ServerStatus proto.InternalMessageInfo

func (m *ServerStatus) GetCpu() float64 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *ServerStatus) GetMemory() float64 {
	if m != nil {
		return m.Memory
	}
	return 0
}

func (m *ServerStatus) GetMsgCount() uint64 {
	if m != nil {
		return m.MsgCount
	}
	return 0
}

type NodeUpdate struct {
	NodeId               int32         `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Secret               uint64        `protobuf:"fixed64,2,opt,name=secret,proto3" json:"secret,omitempty"`
	UpdateCount          int32         `protobuf:"varint,3,opt,name=update_count,json=updateCount,proto3" json:"update_count,omitempty"`
	NodeStatus           int32         `protobuf:"varint,4,opt,name=node_status,json=nodeStatus,proto3" json:"node_status,omitempty"`
	NodeArg              string        `protobuf:"bytes,5,opt,name=node_arg,json=nodeArg,proto3" json:"node_arg,omitempty"`
	Status               *ServerStatus `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *NodeUpdate) Reset()         { *m = NodeUpdate{} }
func (m *NodeUpdate) String() string { return proto.CompactTextString(m) }
func (*NodeUpdate) ProtoMessage()    {}
func (*NodeUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad9a996d16f0fd5c, []int{3}
}

func (m *NodeUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeUpdate.Unmarshal(m, b)
}
func (m *NodeUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeUpdate.Marshal(b, m, deterministic)
}
func (m *NodeUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeUpdate.Merge(m, src)
}
func (m *NodeUpdate) XXX_Size() int {
	return xxx_messageInfo_NodeUpdate.Size(m)
}
func (m *NodeUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_NodeUpdate proto.InternalMessageInfo

func (m *NodeUpdate) GetNodeId() int32 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *NodeUpdate) GetSecret() uint64 {
	if m != nil {
		return m.Secret
	}
	return 0
}

func (m *NodeUpdate) GetUpdateCount() int32 {
	if m != nil {
		return m.UpdateCount
	}
	return 0
}

func (m *NodeUpdate) GetNodeStatus() int32 {
	if m != nil {
		return m.NodeStatus
	}
	return 0
}

func (m *NodeUpdate) GetNodeArg() string {
	if m != nil {
		return m.NodeArg
	}
	return ""
}

func (m *NodeUpdate) GetStatus() *ServerStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

type Response struct {
	Ok                   bool             `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Command              KeepAliveCommand `protobuf:"varint,2,opt,name=command,proto3,enum=nodeapi.KeepAliveCommand" json:"command,omitempty"`
	Err                  string           `protobuf:"bytes,3,opt,name=err,proto3" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad9a996d16f0fd5c, []int{4}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *Response) GetCommand() KeepAliveCommand {
	if m != nil {
		return m.Command
	}
	return KeepAliveCommand_NONE
}

func (m *Response) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto.RegisterEnum("nodeapi.NodeType", NodeType_name, NodeType_value)
	proto.RegisterEnum("nodeapi.KeepAliveCommand", KeepAliveCommand_name, KeepAliveCommand_value)
	proto.RegisterType((*NodeInfo)(nil), "nodeapi.NodeInfo")
	proto.RegisterType((*NodeID)(nil), "nodeapi.NodeID")
	proto.RegisterType((*ServerStatus)(nil), "nodeapi.ServerStatus")
	proto.RegisterType((*NodeUpdate)(nil), "nodeapi.NodeUpdate")
	proto.RegisterType((*Response)(nil), "nodeapi.Response")
}

func init() { proto.RegisterFile("nodeapi.proto", fileDescriptor_ad9a996d16f0fd5c) }

var fileDescriptor_ad9a996d16f0fd5c = []byte{
	// 675 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xdd, 0x6e, 0xd3, 0x4a,
	0x10, 0x8e, 0xd3, 0xc4, 0xb1, 0x27, 0x49, 0x8f, 0xbb, 0x47, 0xe7, 0x90, 0x16, 0x21, 0x82, 0xc5,
	0x45, 0x54, 0xd1, 0xa0, 0xb6, 0xc0, 0x25, 0x52, 0x48, 0xac, 0x12, 0x21, 0xa5, 0x65, 0xfb, 0x83,
	0xe0, 0xc6, 0x72, 0xed, 0xa9, 0x6b, 0xb5, 0xf6, 0x5a, 0x6b, 0xbb, 0x25, 0x8f, 0xc0, 0x43, 0xf1,
	0x04, 0xbc, 0x03, 0xcf, 0x82, 0x66, 0xed, 0x84, 0xa6, 0x48, 0x20, 0xae, 0xbc, 0xf3, 0xcd, 0x7c,
	0x33, 0xdf, 0xcc, 0xce, 0x1a, 0xba, 0x89, 0x08, 0xd0, 0x4b, 0xa3, 0x61, 0x2a, 0x45, 0x2e, 0x58,
	0xab, 0x32, 0xed, 0xaf, 0x75, 0x30, 0x66, 0x22, 0xc0, 0x69, 0x72, 0x21, 0xd8, 0x43, 0x30, 0x09,
	0x77, 0x13, 0x2f, 0xc6, 0x9e, 0xd6, 0xd7, 0x06, 0x26, 0x37, 0x08, 0x98, 0x79, 0x31, 0xb2, 0x61,
	0xe5, 0xcc, 0xe7, 0x29, 0xf6, 0xea, 0x7d, 0x6d, 0xb0, 0xbe, 0xb7, 0x31, 0x5c, 0x64, 0xa5, 0x14,
	0x27, 0xf3, 0x14, 0xcb, 0x78, 0x3a, 0xb1, 0xc7, 0xd0, 0xce, 0x50, 0xde, 0xa0, 0x74, 0xa3, 0xe4,
	0x42, 0xf4, 0xd6, 0x54, 0x3a, 0x28, 0x21, 0x55, 0xed, 0x19, 0x30, 0x95, 0x30, 0x3d, 0xf7, 0x32,
	0x74, 0x6f, 0x50, 0x66, 0x91, 0x48, 0x7a, 0x0d, 0x15, 0x67, 0x91, 0xe7, 0x88, 0x1c, 0x67, 0x25,
	0xce, 0xfa, 0xd0, 0xb9, 0x8d, 0xf2, 0x4b, 0x57, 0x51, 0xa2, 0xa0, 0xd7, 0xec, 0x6b, 0x83, 0x26,
	0x07, 0xc2, 0x94, 0xfe, 0x80, 0x3d, 0x02, 0xf0, 0xaf, 0x8b, 0x2c, 0xa7, 0x8a, 0x41, 0x4f, 0x57,
	0x7e, 0xb3, 0x42, 0xa6, 0x01, 0x7b, 0x00, 0x2d, 0x4f, 0xa2, 0x47, 0xbe, 0x96, 0xaa, 0xa1, 0x93,
	0x39, 0x0d, 0x98, 0x0d, 0x1d, 0xff, 0xd2, 0x4b, 0x12, 0xbc, 0x26, 0xdd, 0x59, 0xcf, 0xe8, 0xaf,
	0x0d, 0xba, 0x7c, 0x05, 0x23, 0x72, 0x78, 0x5b, 0x36, 0x62, 0x96, 0xe4, 0xf0, 0x96, 0x9a, 0xb0,
	0xbf, 0x68, 0xa0, 0xab, 0xfa, 0x13, 0x8a, 0x59, 0x88, 0xd3, 0x54, 0x71, 0x3d, 0x29, 0x85, 0xfd,
	0x0f, 0x7a, 0x86, 0xbe, 0xc4, 0x5c, 0x8d, 0x4d, 0xe7, 0x95, 0xf5, 0xe7, 0x09, 0xed, 0x00, 0xbb,
	0x42, 0x4c, 0xbd, 0xeb, 0xe8, 0x06, 0xdd, 0xa0, 0x90, 0x5e, 0xbe, 0x98, 0x50, 0x93, 0x6f, 0x2c,
	0x3d, 0x93, 0xca, 0x61, 0x9f, 0x42, 0xe7, 0x58, 0x91, 0x8f, 0x73, 0x2f, 0x2f, 0x32, 0x66, 0xc1,
	0x9a, 0x9f, 0x16, 0x4a, 0x8c, 0xc6, 0xe9, 0x48, 0x4a, 0x62, 0x8c, 0x85, 0x9c, 0x2b, 0x25, 0x1a,
	0xaf, 0x2c, 0xba, 0xf8, 0x38, 0x0b, 0x5d, 0x5f, 0x14, 0x49, 0xae, 0x74, 0x34, 0xb8, 0x11, 0x67,
	0xe1, 0x98, 0x6c, 0xfb, 0x9b, 0x06, 0x40, 0x2d, 0x9e, 0xa6, 0x81, 0x97, 0xe3, 0xdf, 0xb7, 0xf9,
	0x04, 0x3a, 0x85, 0xa2, 0xde, 0xc9, 0xdf, 0xe4, 0xed, 0x12, 0x53, 0x25, 0x68, 0x12, 0x2a, 0x67,
	0xa6, 0x84, 0x57, 0x1d, 0x02, 0x41, 0x55, 0x2b, 0x9b, 0xa0, 0x16, 0xcb, 0xf5, 0x64, 0xa8, 0x6e,
	0xde, 0xe4, 0x4a, 0xc4, 0x48, 0x86, 0x6c, 0x07, 0xf4, 0x8a, 0x46, 0x57, 0xde, 0xde, 0xfb, 0x6f,
	0xb9, 0x94, 0x77, 0x87, 0xc1, 0xab, 0x20, 0xdb, 0x03, 0x83, 0x63, 0x96, 0x8a, 0x24, 0x43, 0xb6,
	0x0e, 0x75, 0x71, 0xa5, 0xba, 0x30, 0x78, 0x5d, 0x5c, 0xb1, 0x7d, 0x68, 0xf9, 0x22, 0x8e, 0xbd,
	0x24, 0xa8, 0x16, 0x7c, 0x73, 0x99, 0xeb, 0x1d, 0x62, 0x3a, 0xa2, 0x69, 0x8f, 0xcb, 0x00, 0xbe,
	0x88, 0xa4, 0x29, 0xa3, 0x94, 0xd5, 0xed, 0xd1, 0x71, 0x7b, 0xb7, 0x7c, 0x52, 0xea, 0x15, 0x74,
	0xc0, 0x38, 0xe2, 0x87, 0x67, 0xd3, 0x89, 0xc3, 0xad, 0x1a, 0x03, 0xd0, 0x8f, 0x1d, 0x7e, 0xe6,
	0x70, 0x4b, 0x63, 0x6d, 0x68, 0x1d, 0x8c, 0x4e, 0x9c, 0x0f, 0xa3, 0x8f, 0x56, 0x7d, 0xfb, 0x35,
	0x58, 0xf7, 0x2b, 0x30, 0x03, 0x1a, 0xb3, 0xc3, 0x99, 0x63, 0xd5, 0x58, 0x17, 0x4c, 0xee, 0x8c,
	0x0f, 0x67, 0x33, 0x67, 0x7c, 0x62, 0x69, 0x6c, 0x03, 0xba, 0x65, 0x16, 0x77, 0xfc, 0x76, 0x34,
	0x3b, 0x70, 0xac, 0xfa, 0xde, 0x77, 0x0d, 0x1a, 0x54, 0x93, 0xbd, 0x80, 0x0e, 0xc7, 0x30, 0xa2,
	0x9d, 0x57, 0xf6, 0xea, 0x13, 0xa5, 0xad, 0xda, 0xfa, 0x67, 0x15, 0x9a, 0xd8, 0x35, 0xb6, 0x0b,
	0xe6, 0xfb, 0x02, 0xe5, 0x5c, 0x51, 0xee, 0xfb, 0xb7, 0x7e, 0xcd, 0x61, 0xd7, 0xd8, 0x4b, 0x30,
	0x97, 0x8a, 0xd9, 0xbf, 0x2b, 0x11, 0xe5, 0xa2, 0xdc, 0xa1, 0x2d, 0x06, 0x6e, 0xd7, 0xd8, 0x2b,
	0x58, 0x3f, 0x4d, 0x56, 0x14, 0xfe, 0xa6, 0xdc, 0x4f, 0xde, 0x9b, 0xa7, 0x9f, 0xec, 0x30, 0xca,
	0x2f, 0x8b, 0xf3, 0xa1, 0x2f, 0xe2, 0xe7, 0xd9, 0x3c, 0x41, 0x89, 0x9f, 0x17, 0x5f, 0xb7, 0x22,
	0x9c, 0xeb, 0xea, 0xef, 0xb6, 0xff, 0x23, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x50, 0x2c, 0x42, 0xee,
	0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeClient is the client API for Node service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeClient interface {
	RegisterNode(ctx context.Context, in *NodeInfo, opts ...grpc.CallOption) (*NodeID, error)
	QueryNode(ctx context.Context, in *NodeID, opts ...grpc.CallOption) (*NodeInfo, error)
	KeepAlive(ctx context.Context, in *NodeUpdate, opts ...grpc.CallOption) (*Response, error)
	UnRegisterNode(ctx context.Context, in *NodeID, opts ...grpc.CallOption) (*Response, error)
}

type nodeClient struct {
	cc *grpc.ClientConn
}

func NewNodeClient(cc *grpc.ClientConn) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) RegisterNode(ctx context.Context, in *NodeInfo, opts ...grpc.CallOption) (*NodeID, error) {
	out := new(NodeID)
	err := c.cc.Invoke(ctx, "/nodeapi.Node/RegisterNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) QueryNode(ctx context.Context, in *NodeID, opts ...grpc.CallOption) (*NodeInfo, error) {
	out := new(NodeInfo)
	err := c.cc.Invoke(ctx, "/nodeapi.Node/QueryNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) KeepAlive(ctx context.Context, in *NodeUpdate, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/nodeapi.Node/KeepAlive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) UnRegisterNode(ctx context.Context, in *NodeID, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/nodeapi.Node/UnRegisterNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeServer is the server API for Node service.
type NodeServer interface {
	RegisterNode(context.Context, *NodeInfo) (*NodeID, error)
	QueryNode(context.Context, *NodeID) (*NodeInfo, error)
	KeepAlive(context.Context, *NodeUpdate) (*Response, error)
	UnRegisterNode(context.Context, *NodeID) (*Response, error)
}

// UnimplementedNodeServer can be embedded to have forward compatible implementations.
type UnimplementedNodeServer struct {
}

func (*UnimplementedNodeServer) RegisterNode(ctx context.Context, req *NodeInfo) (*NodeID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterNode not implemented")
}
func (*UnimplementedNodeServer) QueryNode(ctx context.Context, req *NodeID) (*NodeInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryNode not implemented")
}
func (*UnimplementedNodeServer) KeepAlive(ctx context.Context, req *NodeUpdate) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method KeepAlive not implemented")
}
func (*UnimplementedNodeServer) UnRegisterNode(ctx context.Context, req *NodeID) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnRegisterNode not implemented")
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_RegisterNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).RegisterNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeapi.Node/RegisterNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).RegisterNode(ctx, req.(*NodeInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_QueryNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).QueryNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeapi.Node/QueryNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).QueryNode(ctx, req.(*NodeID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_KeepAlive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeUpdate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).KeepAlive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeapi.Node/KeepAlive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).KeepAlive(ctx, req.(*NodeUpdate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_UnRegisterNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).UnRegisterNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nodeapi.Node/UnRegisterNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).UnRegisterNode(ctx, req.(*NodeID))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nodeapi.Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterNode",
			Handler:    _Node_RegisterNode_Handler,
		},
		{
			MethodName: "QueryNode",
			Handler:    _Node_QueryNode_Handler,
		},
		{
			MethodName: "KeepAlive",
			Handler:    _Node_KeepAlive_Handler,
		},
		{
			MethodName: "UnRegisterNode",
			Handler:    _Node_UnRegisterNode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nodeapi.proto",
}
